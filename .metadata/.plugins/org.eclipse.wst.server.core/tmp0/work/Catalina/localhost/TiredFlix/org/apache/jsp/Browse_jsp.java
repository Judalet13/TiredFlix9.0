/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-12 07:45:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Browse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Browse by Category</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"w3-panel w3-margin w3-card-2 w3-white\">\r\n");
      out.write("\t\t<div class=\"w3-panel w3-card-2 w3-padding-24 w3-center\"\r\n");
      out.write("\t\t\tstyle=\"background-color: #F7D4DC; margin-left: 100px; margin-right: 100px;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"w3-row-padding\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"w3-half w3-margin-bottom\">\r\n");
      out.write("\t\t\t\t\t<form class=\"w3-container\" action=\"BrowseByCategoryServlet\"\r\n");
      out.write("\t\t\t\t\t\tmethod=\"get\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"w3-ul w3-center\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><select class=\"w3-select\" name=\"Category\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\" selected>By Category</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Action\">ACTION</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Animation\">ANIMATION</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Children\">CHILDREN</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Classics\">CLASSICS</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Comedy\">COMEDY</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Documentart\">DOCUMENTARY</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Drama\">DRAMA</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Family\">FAMILY</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Foreign\">FOREIGN</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Games\">GAMES</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Horror\">HORROR</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Music\">MUSIC</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"New\">NEW</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Sci_fi\">SCI_FI</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Sports\">SPORTS</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Travel\">TRAVEL</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"w3-padding-16\"><input\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"w3-btn w3-large button w3-round\" style=\"width: 100%;\"\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"submit\" value=\"Browse By Category\"></li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"w3-half w3-margin-bottom\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<form class=\"w3-container\" action=\"BrowseAlphabeticallyServlet\"\r\n");
      out.write("\t\t\t\t\t\tmethod=\"get\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"w3-ul w3-center\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><select class=\"w3-select\" name=\"firstCharacter\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\" selected>Alphabetically</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"A\">A</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"B\">B</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"C\">C</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"D\">D</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"E\">E</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"F\">F</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"G\">G</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"H\">H</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"I\">I</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"J\">J</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"K\">K</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"L\">L</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"M\">M</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"N\">N</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"O\">O</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"P\">P</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Q\">Q</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"R\">R</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"S\">S</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"T\">T</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"U\">U</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"V\">V</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"W\">W</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Y\">Y</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"Z\">Z</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"w3-padding-16\"><input\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"w3-btn w3-large button w3-round\" style=\"width: 100%;\"\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"submit\" value=\"Browse Alphabetically\"></li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
